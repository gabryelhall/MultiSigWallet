[{"C:\\Users\\Gabryel Hall\\desktop\\smart\\multisigwallet\\client\\src\\index.js":"1","C:\\Users\\Gabryel Hall\\desktop\\smart\\multisigwallet\\client\\src\\App.js":"2","C:\\Users\\Gabryel Hall\\desktop\\smart\\multisigwallet\\client\\src\\utils.js":"3"},{"size":209,"mtime":1609284347770,"results":"4","hashOfConfig":"5"},{"size":4243,"mtime":1609610371600,"results":"6","hashOfConfig":"5"},{"size":1191,"mtime":1609588882936,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"rytjxc",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\Gabryel Hall\\desktop\\smart\\multisigwallet\\client\\src\\index.js",[],["17","18"],"C:\\Users\\Gabryel Hall\\desktop\\smart\\multisigwallet\\client\\src\\App.js",["19"],"import React, { useEffect, useState } from 'react';\nimport Multisig from './contracts/MultiSigWallet.json';\nimport { getWeb3 } from './utils.js';\n\n\nfunction App() {\n  const [web3, setWeb3] = useState(undefined);\n  const [accounts, setAccounts] = useState([]);\n  const [contract, setContract] = useState([undefined]);\n  const [balance, setBalance] = useState(undefined);\n  const [currentTransfer, setCurrentTransfer] = useState(undefined);\n  const [quorum, setQuorum] = useState(undefined);\n\n  useEffect(() => {\n    const init = async () => {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = Multisig.networks[networkId];\n      const contract = new web3.eth.Contract(\n        Multisig.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n      console.log(deployedNetwork);\n      console.log(contract.methods);\n      const quorum = await contract.methods.quorum().call();\n\n      setWeb3(web3);\n      setAccounts(accounts);\n      setContract(contract);\n      setQuorum(quorum);\n    }\n    init();\n    window.ethereum.on(\"accountsChanged\", accounts => {\n      setAccounts(accounts);\n    });\n  }, []);\n\n  useEffect(() => {\n    if(typeof contract !== \"undefined\" && typeof web3 !== \"undefined\") {\n      updateBalance();\n      updateCurrentTransfer();\n    }\n  }, [accounts, contract, web3]);\n  \n  async function updateBalance() {\n    console.log(contract.options.address); \n    const test = contract.options.address;\n    console.log(test);\n    const balance = await web3.eth.getBalance(test);\n    console.log(balance);\n    setBalance(balance);\n  }\n\n  \n\n  async function createTransfer(e) {\n    e.preventDefault();\n    const amount = e.target.elements[0].value;\n    const to = e.target.elements[1].value;\n    await contract.methods.createTransfer(amount, to).send({from: accounts[0]});\n    await updateCurrentTransfer();\n  }\n\n  async function sendTransfer() {\n    await contract.methods.sendTransfer(currentTransfer.id).send({from: accounts[0]});\n    await updateBalance();\n    await updateCurrentTransfer();\n  }\n\n  async function updateCurrentTransfer() {\n    const currentTransferId = (await contract.methods.nextId().call()) -1;\n    console.log(currentTransferId);\n    if(currentTransferId >= 0) {\n      console.log(\"test\")\n      const currentTransfer = await contract.methods.transfers(currentTransferId).call();\n      const alreadyApproved = await contract.methods.approvals(accounts[0], currentTransferId).call();\n      setCurrentTransfer({...currentTransfer, alreadyApproved});\n    }\n  }\n\n  if (!web3) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"text-center\">Multisig</h1>\n\n      <div className=\"row\">\n        <div className=\"col-sm-12\">\n           <p>Balance: <b>{ balance }</b> wei </p>\n        </div>\n      </div>\n\n      {!currentTransfer || currentTransfer.approvals >= quorum ? (\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <h2>Create transfer</h2>\n            <form onSubmit={e => createTransfer(e)}>\n              <div className=\"form-group\">\n                <label htmlFor=\"amount\">Amount</label>\n                <input type=\"number\" className=\"form-control\" id=\"amount\" />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"to\">To</label>\n                <input type=\"text\" className=\"form-control\" id=\"to\" />\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n            </form>\n          </div>\n        </div>\n      ) : (\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <h2>Approve transfer</h2>\n            <ul>\n              <li>TransferId: {currentTransfer.id}</li>\n              <li>Amount: {currentTransfer.amount}</li>\n              <li>Approvals: {currentTransfer.approvals}</li>\n            </ul>\n            {currentTransfer.alreadyApproved ? \"Already approved\" : (\n              <button onClick={sendTransfer} type=\"submit\" className=\"btn btn-primary\">Submit</button>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Gabryel Hall\\desktop\\smart\\multisigwallet\\client\\src\\utils.js",[],["20","21"],{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":44,"column":6,"nodeType":"28","endLine":44,"endColumn":32,"suggestions":"29"},{"ruleId":"22","replacedBy":"30"},{"ruleId":"24","replacedBy":"31"},"no-native-reassign",["32"],"no-negated-in-lhs",["33"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'updateBalance' and 'updateCurrentTransfer'. Either include them or remove the dependency array.","ArrayExpression",["34"],["32"],["33"],"no-global-assign","no-unsafe-negation",{"desc":"35","fix":"36"},"Update the dependencies array to be: [accounts, contract, updateBalance, updateCurrentTransfer, web3]",{"range":"37","text":"38"},[1391,1417],"[accounts, contract, updateBalance, updateCurrentTransfer, web3]"]